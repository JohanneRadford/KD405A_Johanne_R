1. UML

Journey
-depDateTime:Calendar
-arrDateTime:Calendar
-noOfChanges:String
-lineOnFirstJourney:String
-travelMinutes:String
-timeToDeparture:String
-noOfZones:String
-lineTypeName:String
-depTimeDeviation:String
-arrTimeDeviation:String
-startStation:Station
-endStation:Station
+ Journey(startStation:Station, endStation:Station)
+ getDepDateTime():Calendar
+ setDepDateTime(depDateTime:Calendar):void
+ getArrDateTime():Calendar
+ setArrDateTime(arrTime:Calendar):void
+ getNoOfChanges():String
+ setNoOfChanges(number:String):void
+ getStartStation():Station
+ getEndStation():Station
+ getLineOnFirstJourney():String
+ setLineOnFirstJourney(lineOnFirstJourney:String):void
+ setTravelTime(travelMinutes:String):void
+ getTravelMinutes():String
+ getTimeToDeparture():String
+ setTimeToDeparture(timeToDeparture:String):void
+ getNoOfZones():String
+ setNoOfZones(noOfZones:String):void
+ getLineTypeName():String
+ setLineTypeName(lineTypeName:String):void
+ getDepTimeDeviation():String
+ setDepTimeDeviation(depTimeDeviation:String):void
+ getArrTimeDeviation():String
+ setArrTimeDeviation(arrTimeDeviation:String):void
+ setStartStation(startStation:Station):void
+ setEndStation(endStation:Station):void

Station
-stationNbr:String
-stationName:String
-latitude:double
-longitude:double
+Station(stationNbr:String)
+Station(stationName:String, stationNbr:String)
+Station(stationName:String, stationNbr:String, latitude:String, longitude:String)
+getLatitude():double
+setLatitude(latitude:double):void
+getLongitude():double
+setLongitude(longitude:double):void
+getStationNbr():String
+getStationName():String
+toString():String
+equals(o:Object):boolean
+hashCode():int
compareTo(another:Station):int


Journeys
- journeys Journey: String []
+Journeys();
+addJourney(journey: Journey): void
+getJourneys(): String []
+clearJourneys(): void




